# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-15 12:26
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('founding_date', models.DateField(blank=True, null=True)),
                ('headquarter_location', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('areas_served', models.CharField(blank=True, max_length=400, null=True)),
                ('no_of_employees', models.CharField(blank=True, max_length=400, null=True)),
                ('type_of_business', models.CharField(blank=True, max_length=400, null=True)),
                ('warehouse_addresses', models.TextField(blank=True, null=True)),
                ('factory_addresses', models.TextField(blank=True, null=True)),
                ('number_of_owners_and_officers', models.CharField(blank=True, max_length=400, null=True)),
                ('officers_and_roles', models.TextField(blank=True, null=True)),
                ('registered_address', models.CharField(blank=True, max_length=700, null=True)),
                ('telephone', models.CharField(blank=True, max_length=400, null=True)),
                ('email', models.CharField(blank=True, max_length=400, null=True)),
                ('website', models.CharField(blank=True, max_length=400, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc3', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc4', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc5', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc6', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc7', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc8', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc9', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc10', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc11', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc12', models.FileField(blank=True, null=True, upload_to='media')),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'KYC Form',
                'verbose_name_plural': 'KYC Forms',
            },
        ),
        migrations.CreateModel(
            name='Backgroundcheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('rOC_Certificates', models.BooleanField(default=False)),
                ('mOA', models.BooleanField(default=False)),
                ('current_List_of_Directors_including_Photo_ID', models.BooleanField(default=False)),
                ('term_Sheets', models.BooleanField(default=False)),
                ('current_Bankers_and_Auditors_and_Company_Secretary', models.BooleanField(default=False)),
                ('sales_Tax_Registration_Certificate', models.BooleanField(default=False)),
                ('last_Filed_Sales_Tax_Certificate', models.BooleanField(default=False)),
                ('municipal_Certificate', models.BooleanField(default=False)),
                ('last_2_years_Audited_Books_of_Accounts', models.BooleanField(default=False)),
                ('last_Paid_Tax_Receipt', models.BooleanField(default=False)),
                ('employee_List_Statement', models.BooleanField(default=False)),
                ('last_Provident_Fund_Receipt', models.BooleanField(default=False)),
                ('list_of_Competitors', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'BGCheck Form',
                'verbose_name_plural': 'BGCheck Forms',
            },
        ),
        migrations.CreateModel(
            name='Backgroundcheckb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('version', models.IntegerField(blank=True, default=1)),
                ('user', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime(2017, 9, 15, 17, 56, 3, 588187))),
                ('rOC_Certificates', models.BooleanField(default=False)),
                ('mOA', models.BooleanField(default=False)),
                ('current_List_of_Directors_including_Photo_ID', models.BooleanField(default=False)),
                ('term_Sheets', models.BooleanField(default=False)),
                ('current_Bankers_and_Auditors_and_Company_Secretary', models.BooleanField(default=False)),
                ('sales_Tax_Registration_Certificate', models.BooleanField(default=False)),
                ('last_Filed_Sales_Tax_Certificate', models.BooleanField(default=False)),
                ('municipal_Certificate', models.BooleanField(default=False)),
                ('last_2_years_Audited_Books_of_Accounts', models.BooleanField(default=False)),
                ('last_Paid_Tax_Receipt', models.BooleanField(default=False)),
                ('employee_List_Statement', models.BooleanField(default=False)),
                ('last_Provident_Fund_Receipt', models.BooleanField(default=False)),
                ('list_of_Competitors', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'BGCheck Log',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(blank=True, max_length=400, null=True)),
                ('branch_founding_date', models.DateField(blank=True, null=True)),
                ('branch_location', models.CharField(blank=True, max_length=400, null=True)),
                ('areas_served_by_branch', models.CharField(blank=True, max_length=400, null=True)),
                ('no_of_employees_in_branch', models.CharField(blank=True, max_length=400, null=True)),
                ('type_of_business_by_branch', models.CharField(blank=True, max_length=400, null=True)),
                ('number_of_owners_and_officers_in_branch', models.CharField(blank=True, max_length=400, null=True)),
                ('officers_and_roles_in_branch', models.TextField(blank=True, null=True)),
                ('branch_registered_address', models.CharField(blank=True, max_length=700, null=True)),
                ('branch_telephone', models.CharField(blank=True, max_length=400, null=True)),
                ('branch_email', models.CharField(blank=True, max_length=400, null=True)),
                ('branch_website', models.CharField(blank=True, max_length=400, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc3', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc4', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc5', models.FileField(blank=True, null=True, upload_to='media')),
            ],
            options={
                'verbose_name': 'Branch Form',
                'verbose_name_plural': 'Branch Forms',
            },
        ),
        migrations.CreateModel(
            name='Digitalization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('what_are_the_departments_that_need_to_be_digitalized_and_why', models.TextField(blank=True, null=True)),
                ('please_mention_if_they_are_new_or_preexisting_departments', models.TextField(blank=True, null=True)),
                ('what_is_the_budget_allocated_for_the_digitlization_process', models.TextField(blank=True, null=True)),
                ('the_priority_in_which_the_deaprtments_need_to_be_digitalized', models.TextField(blank=True, null=True)),
                ('what_are_the_limitations_that_need_to_be_considered', models.TextField(blank=True, null=True)),
                ('the_deadline_by_which_digitalization_needs_to_be_done', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Digitalization - Temporary Form',
                'verbose_name_plural': 'Digitalization - Temporary Forms',
            },
        ),
        migrations.CreateModel(
            name='Digitalizationp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('what_are_the_departments_that_need_to_be_digitalized_and_why', models.TextField(blank=True, null=True)),
                ('please_mention_if_they_are_new_or_preexisting_departments', models.TextField(blank=True, null=True)),
                ('what_is_the_budget_allocated_for_the_digitlization_process', models.TextField(blank=True, null=True)),
                ('the_priority_in_which_the_deaprtments_need_to_be_digitalized', models.TextField(blank=True, null=True)),
                ('what_are_the_limitations_that_need_to_be_considered', models.TextField(blank=True, null=True)),
                ('the_deadline_by_which_digitalization_needs_to_be_done', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Digitalization - Permanent Form',
                'verbose_name_plural': 'Digitalization - Permanent Forms',
            },
        ),
        migrations.CreateModel(
            name='Duediligence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=11, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('please_select_the_growth_stage_of_your_company', models.CharField(blank=True, choices=[('start_up', 'Start up'), ('growing', 'Growing'), ('matured', 'Matured')], max_length=30, null=True)),
                ('please_tick_the_type_of_company', models.CharField(blank=True, choices=[('proprietary', 'Proprietary'), ('partnership', 'Partnership'), ('llp', 'LLP'), ('private_ltd', 'Private Ltd'), ('limited', 'Limited'), ('privately_held', 'Private held'), ('publically_traded', 'Publically traded')], max_length=12, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('ticker_ID', models.CharField(blank=True, max_length=20, null=True)),
                ('what_is_the_key_need_you_are_providing_for_your_customer', models.TextField(blank=True, max_length=600, null=True)),
                ('evidences_that_show_need_stated_above_for_customer_is_fulfilled', models.TextField(blank=True, max_length=600, null=True)),
                ('what_are_some_of_the_aspects_you_are_facing_a_challenge_with', models.TextField(blank=True, max_length=600, null=True)),
            ],
            options={
                'verbose_name': 'Duediligence - Temporary Form',
                'verbose_name_plural': 'Duediligence - Temporary Forms',
            },
        ),
        migrations.CreateModel(
            name='Duediligencep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('please_select_the_growth_stage_of_your_company', models.CharField(blank=True, choices=[('start_up', 'Start up'), ('growing', 'Growing'), ('matured', 'Matured')], max_length=30, null=True)),
                ('please_tick_the_type_of_company', models.CharField(blank=True, choices=[('proprietary', 'Proprietary'), ('partnership', 'Partnership'), ('llp', 'LLP'), ('private_ltd', 'Private Ltd'), ('limited', 'Limited'), ('privately_held', 'Private held'), ('publically_traded', 'Publically traded')], max_length=12, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('ticker_ID', models.CharField(blank=True, max_length=20, null=True)),
                ('what_is_the_key_need_you_are_providing_for_your_customer', models.TextField(blank=True, max_length=600, null=True)),
                ('evidences_that_show_need_stated_above_for_customer_is_fulfilled', models.TextField(blank=True, max_length=600, null=True)),
                ('what_are_some_of_the_aspects_you_are_facing_a_challenge_with', models.TextField(blank=True, max_length=600, null=True)),
            ],
            options={
                'verbose_name': 'Duediligence - Permanent Form',
                'verbose_name_plural': 'Duediligence - Permanent Forms',
            },
        ),
        migrations.CreateModel(
            name='Miom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('meeting_description', models.TextField(blank=True, null=True)),
                ('main_concerns', models.TextField(blank=True, null=True)),
                ('restrictions', models.TextField(blank=True, null=True)),
                ('plan_of_action_for_Pathscript', models.TextField(blank=True, null=True)),
                ('plan_of_action_for_Client', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Minute of Meeting - Temporary Form',
                'verbose_name_plural': 'Minute of Meeting - Temporary Forms',
            },
        ),
        migrations.CreateModel(
            name='Miomp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('meeting_description', models.TextField(blank=True, null=True)),
                ('main_concerns', models.TextField(blank=True, null=True)),
                ('restrictions', models.TextField(blank=True, null=True)),
                ('plan_of_action_for_Pathscript', models.TextField(blank=True, null=True)),
                ('plan_of_action_for_Client', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Minute of Meeting - Permanent Form',
                'verbose_name_plural': 'Minute of Meeting - Permanent Forms',
            },
        ),
        migrations.CreateModel(
            name='Problemsolving',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('what_is_the_issue_that_needs_to_be_addressed', models.TextField(blank=True, null=True)),
                ('what_is_its_effect_on_the_company', models.TextField(blank=True, null=True)),
                ('researches_that_have_been_done_on_the_possible_solutions', models.TextField(blank=True, null=True)),
                ('what_are_the_solutions_that_have_already_been_tried', models.TextField(blank=True, null=True)),
                ('what_are_the_solutions_that_failed_and_the_reasons_for_failure', models.TextField(blank=True, null=True)),
                ('what_are_the_parameters_to_be_considered', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Problem Solving - Temporary Form',
                'verbose_name_plural': 'Problem Solving - Temporary Forms',
            },
        ),
        migrations.CreateModel(
            name='Problemsolvingp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('what_is_the_issue_that_needs_to_be_addressed', models.TextField(blank=True, null=True)),
                ('what_is_its_effect_on_the_company', models.TextField(blank=True, null=True)),
                ('researches_that_have_been_done_on_the_possible_solutions', models.TextField(blank=True, null=True)),
                ('what_are_the_solutions_that_have_already_been_tried', models.TextField(blank=True, null=True)),
                ('what_are_the_solutions_that_failed_and_the_reasons_for_failure', models.TextField(blank=True, null=True)),
                ('what_are_the_parameters_to_be_considered', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Problem Solving - Permanent Form',
                'verbose_name_plural': 'Problem Solving - Permanent Forms',
            },
        ),
        migrations.CreateModel(
            name='Relatedcompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_company_name', models.CharField(blank=True, max_length=40, null=True)),
                ('relation', models.TextField(blank=True, null=True)),
                ('related_company_registered_address', models.CharField(blank=True, max_length=700, null=True)),
                ('related_company_telephone', models.CharField(blank=True, max_length=400, null=True)),
                ('related_company_email', models.CharField(blank=True, max_length=400, null=True)),
                ('related_company_website', models.CharField(blank=True, max_length=400, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc3', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc4', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc5', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc6', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc7', models.FileField(blank=True, null=True, upload_to='media')),
            ],
            options={
                'verbose_name': 'Related Company Form',
                'verbose_name_plural': 'Related Company Forms',
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('please_select_the_growth_stage_of_your_company', models.CharField(blank=True, choices=[('start_up', 'Start up'), ('growing', 'Growing'), ('matured', 'Matured')], max_length=30, null=True)),
                ('please_tick_the_type_of_company', models.CharField(blank=True, choices=[('proprietary', 'Proprietary'), ('partnership', 'Partnership'), ('llp', 'LLP'), ('private_ltd', 'Private Ltd'), ('limited', 'Limited'), ('privately_held', 'Private held'), ('publically_traded', 'Publically traded')], max_length=12, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('ticker_ID', models.CharField(blank=True, max_length=20, null=True)),
                ('what_is_the_idea_you_are_looking_to_implement', models.TextField(blank=True, null=True)),
                ('why_do_you_think_that_the_idea_should_be_implemented', models.TextField(blank=True, null=True)),
                ('was_this_idea_previously_executed_and_if_yes_state_the_method', models.TextField(blank=True, null=True)),
                ('reasons_for_failure_of_previous_implementation_methods', models.TextField(blank=True, null=True)),
                ('other_methods_of_implementation_that_you_would_suggest', models.TextField(blank=True, null=True)),
                ('is_the_level_of_implementation_generic_or_specific', models.TextField(blank=True, null=True)),
                ('deadline_by_which_you_need_the_idea_to_be_implemented', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Script&Control - Temporary Form',
                'verbose_name_plural': 'Script&Control - Temporary Forms',
            },
        ),
        migrations.CreateModel(
            name='Scriptp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('please_select_the_growth_stage_of_your_company', models.CharField(blank=True, choices=[('start_up', 'Start up'), ('growing', 'Growing'), ('matured', 'Matured')], max_length=30, null=True)),
                ('please_tick_the_type_of_company', models.CharField(blank=True, choices=[('proprietary', 'Proprietary'), ('partnership', 'Partnership'), ('llp', 'LLP'), ('private_ltd', 'Private Ltd'), ('limited', 'Limited'), ('privately_held', 'Private held'), ('publically_traded', 'Publically traded')], max_length=12, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('ticker_ID', models.CharField(blank=True, max_length=20, null=True)),
                ('what_is_the_idea_you_are_looking_to_implement', models.TextField(blank=True, null=True)),
                ('why_do_you_think_that_the_idea_should_be_implemented', models.TextField(blank=True, null=True)),
                ('was_this_idea_previously_executed_and_if_yes_state_the_method', models.TextField(blank=True, null=True)),
                ('reasons_for_failure_of_previous_implementation_methods', models.TextField(blank=True, null=True)),
                ('other_methods_of_implementation_that_you_would_suggest', models.TextField(blank=True, null=True)),
                ('is_the_level_of_implementation_generic_or_specific', models.TextField(blank=True, null=True)),
                ('deadline_by_which_you_need_the_idea_to_be_implemented', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Script&Control - Permanent Form',
                'verbose_name_plural': 'Script&Control - Permanent Forms',
            },
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc3', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc4', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc5', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('please_select_the_growth_stage_of_your_company', models.CharField(blank=True, choices=[('start_up', 'Start up'), ('growing', 'Growing'), ('matured', 'Matured')], max_length=30, null=True)),
                ('please_tick_the_type_of_company', models.CharField(blank=True, choices=[('proprietary', 'Proprietary'), ('partnership', 'Partnership'), ('llp', 'LLP'), ('private_ltd', 'Private Ltd'), ('limited', 'Limited'), ('privately_held', 'Private held'), ('publically_traded', 'Publically traded')], max_length=12, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('ticker_ID', models.CharField(blank=True, max_length=20, null=True)),
                ('business_strategies_that_are_already_deployed_in_your_company', models.TextField(blank=True, null=True)),
                ('what_are_the_strategies_that_were_deployed_but_failed', models.TextField(blank=True, null=True)),
                ('limitations_of_previous_strategies', models.TextField(blank=True, null=True)),
                ('factors_to_be_considered_before_planning_new_strategies', models.TextField(blank=True, null=True)),
                ('deadline_by_which_strategy_needs_to_be_deployed', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Strategy - Temporary Form',
                'verbose_name_plural': 'Strategy - Temporary Forms',
            },
        ),
        migrations.CreateModel(
            name='Strategyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc3', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc4', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc5', models.FileField(blank=True, null=True, upload_to='media')),
                ('version', models.IntegerField(blank=True, default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('please_select_the_growth_stage_of_your_company', models.CharField(blank=True, choices=[('start_up', 'Start up'), ('growing', 'Growing'), ('matured', 'Matured')], max_length=30, null=True)),
                ('please_tick_the_type_of_company', models.CharField(blank=True, choices=[('proprietary', 'Proprietary'), ('partnership', 'Partnership'), ('llp', 'LLP'), ('private_ltd', 'Private Ltd'), ('limited', 'Limited'), ('privately_held', 'Private held'), ('publically_traded', 'Publically traded')], max_length=12, null=True)),
                ('stock_exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('ticker_ID', models.CharField(blank=True, max_length=20, null=True)),
                ('business_strategies_that_are_already_deployed_in_your_company', models.TextField(blank=True, null=True)),
                ('what_are_the_strategies_that_were_deployed_but_failed', models.TextField(blank=True, null=True)),
                ('limitations_of_previous_strategies', models.TextField(blank=True, null=True)),
                ('factors_to_be_considered_before_planning_new_strategies', models.TextField(blank=True, null=True)),
                ('deadline_by_which_strategy_needs_to_be_deployed', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Strategy - Permanent Form',
                'verbose_name_plural': 'Strategy - Permanent Forms',
            },
        ),
        migrations.CreateModel(
            name='Subsidiary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subsidiary_name', models.CharField(blank=True, max_length=400, null=True)),
                ('subsidiary_founding_date', models.DateField(blank=True, null=True)),
                ('subsidiary_location', models.CharField(blank=True, max_length=400, null=True)),
                ('areas_served_by_subsidiary', models.CharField(blank=True, max_length=400, null=True)),
                ('no_of_employees_in_subsidiary', models.CharField(blank=True, max_length=400, null=True)),
                ('type_of_business_by_subsidiary', models.CharField(blank=True, max_length=400, null=True)),
                ('subsidiary_warehouse_addresses', models.TextField(blank=True, null=True)),
                ('subsidiary_factory_addresses', models.TextField(blank=True, null=True)),
                ('number_of_owners_and_officers_in_subsidiary', models.CharField(blank=True, max_length=400, null=True)),
                ('officers_and_roles_in_subsidiary', models.TextField(blank=True, null=True)),
                ('subsidiary_registered_address', models.CharField(blank=True, max_length=700, null=True)),
                ('subsidiary_telephone', models.CharField(blank=True, max_length=400, null=True)),
                ('subsidiary_email', models.CharField(blank=True, max_length=400, null=True)),
                ('subsidiary_website', models.CharField(blank=True, max_length=400, null=True)),
                ('upload_Doc1', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc2', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc3', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc4', models.FileField(blank=True, null=True, upload_to='media')),
                ('upload_Doc5', models.FileField(blank=True, null=True, upload_to='media')),
            ],
            options={
                'verbose_name': 'Subsidiary Form',
                'verbose_name_plural': 'Subsidiary Forms',
            },
        ),
    ]
